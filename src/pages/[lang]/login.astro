---
import Layout from '../../layouts/Layout.astro';
import Input from '../../components/atoms/Input.astro';
import Button from '../../components/atoms/Button.astro';
import { useI18n } from '../../utils/i18n';

export function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'km' } },
    { params: { lang: 'zh' } },
    { params: { lang: 'ja' } }
  ];
}

const { lang } = Astro.params;
const { t } = useI18n(Astro.url);
---

<Layout 
  title={t('auth.login.title')}
  description={t('auth.login.subtitle')}
>
  <div class="max-w-md mx-auto">
    <h1 class="text-4xl font-bold tracking-tight text-gray-900 dark:text-white text-center">
      {t('auth.login.title')}
    </h1>
    <p class="mt-2 text-center text-gray-600 dark:text-gray-300">
      {t('auth.login.subtitle')}
    </p>

    <form id="login-form" class="mt-8 space-y-6">
      <Input
        label={t('auth.login.username')}
        name="username"
        type="text"
        required
      />
      <Input
        label={t('auth.login.password')}
        name="password"
        type="password"
        required
      />
      <div id="error-message" class="text-red-500 text-sm hidden"></div>
      <Button type="submit" size="lg" class="w-full">{t('auth.login.submit')}</Button>
    </form>

    <p class="mt-4 text-center text-sm text-gray-600 dark:text-gray-300">
      Test credentials: username: 'kminchelle' / password: '0lelplR'
    </p>
  </div>
</Layout>

<script>
  import { login } from '../../lib/api';
  import { setUser } from '../../store/auth';

  const form = document.getElementById('login-form') as HTMLFormElement;
  const errorMessage = document.getElementById('error-message');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (errorMessage) {
      errorMessage.classList.add('hidden');
    }

    const formData = new FormData(form);
    
    try {
      const user = await login({
        username: formData.get('username') as string,
        password: formData.get('password') as string,
      });
      
      setUser(user);
      window.location.href = '/products';
    } catch (error) {
      if (errorMessage) {
        errorMessage.textContent = 'Invalid username or password';
        errorMessage.classList.remove('hidden');
      }
    }
  });
</script>