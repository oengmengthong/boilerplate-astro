---
interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article';
  article?: {
    publishedTime?: string;
    modifiedTime?: string;
    author?: string;
    tags?: string[];
  };
}

const {
  title,
  description = 'A modern e-commerce website built with Astro',
  image = '/og-image.jpg',
  type = 'website',
  article
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const siteName = 'Modern E-commerce';
---

<!-- Essential Meta Tags -->
<title>{title} | {siteName}</title>
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph -->
<meta property="og:site_name" content={siteName} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={new URL(image, Astro.site)} />
<meta property="og:type" content={type} />

{article && (
  <>
    <meta property="article:published_time" content={article.publishedTime} />
    {article.modifiedTime && (
      <meta property="article:modified_time" content={article.modifiedTime} />
    )}
    {article.author && (
      <meta property="article:author" content={article.author} />
    )}
    {article.tags?.map(tag => (
      <meta property="article:tag" content={tag} />
    ))}
  </>
)}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, Astro.site)} />

<!-- Additional Meta -->
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="robots" content="index,follow" />
<meta name="googlebot" content="index,follow" />

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<!-- JSON-LD Schema -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": type === 'article' ? 'Article' : 'WebSite',
  "url": canonicalURL,
  "name": title,
  "description": description,
  "image": new URL(image, Astro.site),
  ...(type === 'article' && article ? {
    "datePublished": article.publishedTime,
    "dateModified": article.modifiedTime || article.publishedTime,
    "author": {
      "@type": "Person",
      "name": article.author
    }
  } : {})
})} />