---
import Button from '../atoms/Button.astro';
---

<div
  id="cart-drawer"
  class="fixed inset-y-0 right-0 w-96 bg-white dark:bg-gray-800 shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out z-50"
>
  <div class="h-full flex flex-col">
    <div class="px-4 py-6 border-b border-gray-200 dark:border-gray-700">
      <div class="flex items-center justify-between">
        <h2 class="text-lg font-medium text-gray-900 dark:text-white">Shopping Cart</h2>
        <button
          id="close-cart"
          class="text-gray-400 hover:text-gray-500"
        >
          <span class="sr-only">Close cart</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>

    <div class="flex-1 overflow-y-auto px-4 py-6">
      <div id="cart-items" class="space-y-4">
        <!-- Cart items will be rendered here -->
      </div>
    </div>

    <div class="border-t border-gray-200 dark:border-gray-700 px-4 py-6">
      <div class="flex justify-between text-base font-medium text-gray-900 dark:text-white">
        <p>Subtotal</p>
        <p id="cart-total">$0.00</p>
      </div>
      <p class="mt-0.5 text-sm text-gray-500">Shipping and taxes calculated at checkout.</p>
      <div class="mt-6">
        <Button size="lg" class="w-full">Checkout</Button>
      </div>
    </div>
  </div>
</div>

<script>
  import { cartItems, isCartOpen } from '../../store/cart';

  const drawer = document.getElementById('cart-drawer');
  const closeButton = document.getElementById('close-cart');
  const cartItemsContainer = document.getElementById('cart-items');
  const cartTotal = document.getElementById('cart-total');

  function updateCart() {
    const items = cartItems.get();
    if (cartItemsContainer) {
      cartItemsContainer.innerHTML = Object.values(items)
        .map(item => `
          <div class="flex items-center gap-4">
            <div class="flex-1">
              <h3 class="text-sm font-medium text-gray-900 dark:text-white">${item.name}</h3>
              <p class="text-sm text-gray-500">Qty: ${item.quantity}</p>
            </div>
            <p class="text-sm font-medium text-gray-900 dark:text-white">
              $${(item.price * item.quantity).toFixed(2)}
            </p>
          </div>
        `)
        .join('');
    }

    if (cartTotal) {
      const total = Object.values(items).reduce(
        (sum, item) => sum + item.price * item.quantity,
        0
      );
      cartTotal.textContent = `$${total.toFixed(2)}`;
    }
  }

  cartItems.subscribe(updateCart);

  isCartOpen.subscribe(open => {
    if (drawer) {
      drawer.style.transform = open ? 'translateX(0)' : 'translateX(100%)';
    }
  });

  closeButton?.addEventListener('click', () => {
    isCartOpen.set(false);
  });
</script>